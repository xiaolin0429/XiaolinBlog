version: '3.8'

services:
  # PostgreSQL数据库
  postgres:
    image: postgres:15
    container_name: blog_postgres_dev
    environment:
      POSTGRES_USER: blog_user
      POSTGRES_PASSWORD: blog_password
      POSTGRES_DB: blog_db
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - blog_network

  # Redis缓存
  redis:
    image: redis:7-alpine
    container_name: blog_redis_dev
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    networks:
      - blog_network

  # 后端API服务（开发模式）
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: blog_backend_dev
    environment:
      - POSTGRES_SERVER=postgres
      - POSTGRES_USER=blog_user
      - POSTGRES_PASSWORD=blog_password
      - POSTGRES_DB=blog_db
      - REDIS_HOST=redis
      - SECRET_KEY=dev-secret-key-not-for-production
      - DEBUG=true
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
    volumes:
      - ./backend:/app
      - /app/__pycache__
    networks:
      - blog_network
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  # Celery异步任务处理（开发模式）
  celery:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: blog_celery_dev
    command: celery -A app.core.celery worker --loglevel=info --reload
    environment:
      - POSTGRES_SERVER=postgres
      - POSTGRES_USER=blog_user
      - POSTGRES_PASSWORD=blog_password
      - POSTGRES_DB=blog_db
      - REDIS_HOST=redis
      - DEBUG=true
    depends_on:
      - postgres
      - redis
    volumes:
      - ./backend:/app
      - /app/__pycache__
    networks:
      - blog_network

  # 前端应用（开发模式）
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: blog_frontend_dev
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - NODE_ENV=development
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    networks:
      - blog_network
    command: npm run dev

volumes:
  postgres_dev_data:
  redis_dev_data:

networks:
  blog_network:
    driver: bridge